{"version":3,"sources":["webpack:///./node_modules/@chakra-ui/layout/dist/esm/text.js","webpack:///./src/pages/testPage.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","Text","props","ref","styles","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","aliasedProps","textAlign","align","textDecoration","decoration","textTransform","casing","p","className","__css","displayName","TestPage","fontSize","my","bg","direction","spacing","colorScheme","variant"],"mappings":"2FAAA,+IAASA,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,WA2BvB,IAAIS,EAAoB,aAAW,SAAUC,EAAOC,GACzD,IAAIC,EAAS,YAAe,OAAQF,GAGhCG,EA5BN,SAAuCX,EAAQY,GAC7C,GAAc,MAAVZ,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTiB,EAAanB,OAAOoB,KAAKd,GAG7B,IAAKH,EAAI,EAAGA,EAAIgB,EAAWd,OAAQF,IACjCI,EAAMY,EAAWhB,GACbe,EAASG,QAAQd,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EAgBIoB,CADa,YAAiBR,GACmB,CAAC,YAAa,QAAS,aAAc,WAE7FS,EAAe,YAAgB,CACjCC,UAAWV,EAAMW,MACjBC,eAAgBZ,EAAMa,WACtBC,cAAed,EAAMe,SAEvB,OAAoB,gBAAoB,IAAOC,EAAG/B,EAAS,CACzDgB,IAAKA,EACLgB,UAAW,YAAG,cAAejB,EAAMiB,YAClCR,EAAcN,EAAM,CACrBe,MAAOhB,QAIP,MACFH,EAAKoB,YAAc,S,kCC9DrB,4FA2BeC,UAzBE,kBACf,oCACE,kBAAC,IAAD,uBACA,kBAAC,IAAD,CAAMC,SAAS,KAAKC,GAAI,GAAxB,2DAGA,kBAAC,IAAD,CAAKC,GAAG,eAAR,WACA,kBAAC,IAAD,CAAQA,GAAG,eAAX,YAEA,kBAAC,IAAD,CAAOC,UAAU,MAAMC,QAAS,EAAGd,MAAM,UACrC,kBAAC,IAAD,CAAQe,YAAY,OAAOC,QAAQ,SAAnC,UAGA,kBAAC,IAAD,CAAQD,YAAY,OAAOC,QAAQ,WAAnC,UAGA,kBAAC,IAAD,CAAQD,YAAY,OAAOC,QAAQ,SAAnC,UAGA,kBAAC,IAAD,CAAQD,YAAY,OAAOC,QAAQ,QAAnC","file":"component---src-pages-test-page-js-bdf56ddfc8129072845c.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__, filterUndefined } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/docs/typography/text\n */\n\nexport var Text = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Text\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"align\", \"decoration\", \"casing\"]);\n\n  var aliasedProps = filterUndefined({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /*#__PURE__*/React.createElement(chakra.p, _extends({\n    ref: ref,\n    className: cx(\"chakra-text\", props.className)\n  }, aliasedProps, rest, {\n    __css: styles\n  }));\n});\n\nif (__DEV__) {\n  Text.displayName = \"Text\";\n}","import { Heading, Text, Box, Button, Stack } from '@chakra-ui/react'\nimport React from 'react'\nconst TestPage = () => (\n  <>\n    <Heading>404: Not Found</Heading>\n    <Text fontSize=\"xl\" my={5}>\n      You just hit a route that doesn&#39;t exist... the sadness.\n    </Text>\n    <Box bg=\"brandPurple\">Welcome</Box>\n    <Button bg=\"brandPurple\">Click me</Button>\n\n    <Stack direction=\"row\" spacing={4} align=\"center\">\n        <Button colorScheme=\"teal\" variant=\"solid\">\n            Button\n        </Button>\n        <Button colorScheme=\"teal\" variant=\"outline\">\n            Button\n        </Button>\n        <Button colorScheme=\"teal\" variant=\"ghost\">\n            Button\n        </Button>\n        <Button colorScheme=\"teal\" variant=\"link\">\n            Button\n        </Button>\n    </Stack>\n  </>\n)\nexport default TestPage"],"sourceRoot":""}